name: Convert PPT to Image

on:
  push:
    paths:
      - "**.ppt"
      - "**.pptx"
  workflow_dispatch: # 添加这一行来启用手动触发

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed PPT files
        id: changed-files
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Before commit: ${{ github.event.before }}"
          echo "After commit: ${{ github.event.after }}"

          if [ "${{ github.event_name }}" == "push" ]; then
            echo "处理 push 事件..."
            FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -E '\.ppt$|\.pptx$' || true)
          else
            echo "处理手动触发事件..."
            FILES=$(git diff --name-only HEAD^ HEAD | grep -E '\.ppt$|\.pptx$' || true)
          fi

          echo "----------------------------------------"
          echo "找到的文件列表："
          echo "$FILES"
          echo "----------------------------------------"
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: Install LibreOffice and ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y libreoffice
          sudo apt-get install -y imagemagick

      - name: Configure ImageMagick policy
        run: |
          sudo sed -i 's/rights="none" pattern="PDF"/rights="read|write" pattern="PDF"/' /etc/ImageMagick-6/policy.xml

      - name: Convert PPT to PDF
        run: |
          echo "开始转换过程..."
          echo "获取到的文件列表："
          echo "${{ steps.changed-files.outputs.files }}"

          # 读取上一步的文件列表
          IFS=$'\n' read -ra FILES <<< "${{ steps.changed-files.outputs.files }}"
          for file in "${FILES[@]}"; do
            echo "----------------------------------------"
            echo "处理文件: $file"
            
            filename=$(basename -- "$file")
            dirname=$(dirname -- "$file")
            name="${filename%.*}"
            
            echo "文件名: $filename"
            echo "目录: $dirname"
            echo "基础名: $name"
            
            # 转换为PDF
            echo "正在转换为PDF..."
            libreoffice --headless --convert-to pdf "$file" --outdir "$dirname"
            
            # 检查PDF是否存在
            echo "检查PDF文件..."
            ls -l "$dirname/$name.pdf"
            
            # 转换PDF为JPG（所有页面）
            echo "正在转换PDF为JPG（所有页面）..."
            convert -density 150 "${dirname}/${name}.pdf" -append -quality 50 "${dirname}/${name}_all_pages.jpg"
            
            # 转换PDF为JPG（第一页）
            echo "正在转换PDF为JPG（第一页）..."
            convert -density 150 "${dirname}/${name}.pdf[0]" -quality 50 "${dirname}/${name}_first_page.jpg"
            
            # 删除PDF文件
            echo "删除临时PDF文件..."
            rm "${dirname}/${name}.pdf"
            
            # 检查生成的文件
            echo "检查生成的文件..."
            ls -l "$dirname"
            
            echo "完成转换: $file"
            echo "----------------------------------------"
          done

          echo "所有文件处理完成！"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Add all PNG files
          git add *.png

          # Commit if there are changes
          git diff --staged --quiet || git commit -m "Convert PPT to images"

          # Push changes
          git push
